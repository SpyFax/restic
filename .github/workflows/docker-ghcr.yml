name: Build and Push Docker Image

on:
  push:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  VERSION: 0.18.0
  RESTIC_REPO: https://github.com/restic/restic.git
  RESTIC_DIR: restic-src

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: your-docker/repo
          tags: |
            type=semver,pattern={{version}},value=v${{ env.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ env.VERSION }}
            type=semver,pattern={{major}},value=v${{ env.VERSION }}

      - name: Show generated tags and labels
        run: |
          echo "Tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo
          echo "Labels:"
          echo "${{ steps.meta.outputs.labels }}"

      # - name: Clone restic
      #   run: git clone --depth 1 --branch=v${VERSION} $RESTIC_REPO $RESTIC_DIR
      #   
      # - name: Copy Dockerfile to restic source
      #   run: cp Dockerfile $RESTIC_DIR/
      #    
      # - name: Normalize image name and tag
      #   id: prep
      #   run: |
      #     REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
      #     echo "IMAGE=ghcr.io/${REPO_LOWER}" >> "$GITHUB_OUTPUT"
      #     echo "TAG=v${VERSION}" >> "$GITHUB_OUTPUT"
      #
      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Build Docker image
      #   run: |
      #     cd $RESTIC_DIR
      #     docker build \
      #       --build-arg VERSION=${{ env.VERSION }} \
      #       -t ${{ steps.prep.outputs.IMAGE }}:${{ steps.prep.outputs.TAG }} .
      #
      # - name: Push Docker image
      #   run: docker push ${{ steps.prep.outputs.IMAGE }}:${{ steps.prep.outputs.TAG }}
